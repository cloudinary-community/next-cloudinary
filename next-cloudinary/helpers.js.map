{"version":3,"sources":["src/helpers.ts","src/helpers/getCldImageUrl.ts","src/constants/analytics.ts","package.json","src/lib/cloudinary.ts","src/helpers/getCldOgImageUrl.ts","src/helpers/getCldVideoUrl.ts"],"sourcesContent":["export { getCldImageUrl } from './helpers/getCldImageUrl';\n// @deprecated GetCldImageUrl\nexport type { GetCldImageUrl, GetCldImageUrlOptions, GetCldImageUrlConfig, GetCldImageUrlAnalytics } from './helpers/getCldImageUrl';\n\nexport { getCldOgImageUrl } from './helpers/getCldOgImageUrl';\n// @deprecated GetCldOgImageUrl\nexport type { GetCldOgImageUrl, GetCldOgImageUrlOptions } from './helpers/getCldOgImageUrl';\n\nexport { getCldVideoUrl } from './helpers/getCldVideoUrl';\nexport type { GetCldVideoUrlOptions, GetCldVideoUrlConfig, GetCldVideoUrlAnalytics } from './helpers/getCldVideoUrl';","import { constructCloudinaryUrl } from '@cloudinary-util/url-loader';\nimport type { ImageOptions, ConfigOptions, AnalyticsOptions } from '@cloudinary-util/url-loader';\n\nimport { NEXT_CLOUDINARY_ANALYTICS_ID, NEXT_CLOUDINARY_VERSION, NEXT_VERSION } from '../constants/analytics';\nimport {checkForCloudName} from \"../lib/cloudinary\";\n\n/**\n * getCldImageUrl\n */\n\nexport interface GetCldImageUrlOptions extends ImageOptions {};\nexport interface GetCldImageUrlConfig extends ConfigOptions {};\nexport interface GetCldImageUrlAnalytics extends AnalyticsOptions {};\n\n// @deprecated GetCldImageUrl\nexport interface GetCldImageUrl {\n  options: GetCldImageUrlOptions;\n  config?: GetCldImageUrlConfig;\n  analytics?: GetCldImageUrlAnalytics;\n}\n\nexport function getCldImageUrl(options: GetCldImageUrlOptions, config?: GetCldImageUrlConfig, analytics?: GetCldImageUrlAnalytics) {\n  const cloudName = config?.cloud?.cloudName ?? process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME;\n  checkForCloudName(cloudName);\n  return constructCloudinaryUrl({\n    options,\n    config: Object.assign({\n      cloud: {\n        cloudName: cloudName\n      },\n    }, config),\n    analytics: Object.assign({\n      sdkCode: NEXT_CLOUDINARY_ANALYTICS_ID,\n      sdkSemver: NEXT_CLOUDINARY_VERSION,\n      techVersion: NEXT_VERSION,\n      feature: ''\n    }, analytics)\n  });\n}\n","import nextPkg from 'next/package.json';\nimport pkg from '../../package.json';\n\nexport const NEXT_CLOUDINARY_ANALYTICS_ID = 'V';\nexport const NEXT_CLOUDINARY_VERSION = pkg.version;\nexport const NEXT_VERSION = nextPkg.version;","{\n  \"name\": \"next-cloudinary\",\n  \"version\": \"5.16.0\",\n  \"license\": \"MIT\",\n  \"main\": \"./dist/index.js\",\n  \"module\": \"./dist/index.mjs\",\n  \"types\": \"./dist/index.d.ts\",\n  \"source\": \"src/index.ts\",\n  \"scripts\": {\n    \"build\": \"tsup\",\n    \"dev\": \"tsup --watch\",\n    \"prepublishOnly\": \"cp ../README.md . && cp ../LICENSE . && yarn build\",\n    \"postpublish\": \"rm ./README.md && rm ./LICENSE\",\n    \"test\": \"jest\",\n    \"test:app\": \"NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME=\\\"test\\\" yarn build && cd tests/nextjs-app && yarn build\"\n  },\n  \"dependencies\": {\n    \"@cloudinary-util/url-loader\": \"^3.22.0\",\n    \"@cloudinary-util/util\": \"^2.3.0\"\n  },\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.23.2\",\n    \"@babel/preset-env\": \"^7.23.2\",\n    \"@types/jest\": \"^29.5.6\",\n    \"@types/react\": \"^18.2.33\",\n    \"@types/react-dom\": \"^18.2.14\",\n    \"babel-jest\": \"^29.7.0\",\n    \"dotenv\": \"^16.3.1\",\n    \"jest\": \"^29.7.0\",\n    \"jest-environment-jsdom\": \"^29.7.0\",\n    \"mkdirp\": \"^3.0.1\",\n    \"ts-jest\": \"^29.1.1\",\n    \"tsup\": \"^7.2.0\",\n    \"typescript\": \"^5.2.2\"\n  },\n  \"peerDependencies\": {\n    \"next\": \"^12 || ^13 || ^14\",\n    \"react\": \"^17 || ^18\"\n  }\n}\n","/**\n * pollForProcessingImage\n */\n\nexport interface PollForProcessingImageOptions {\n  src: string;\n}\n\nexport async function pollForProcessingImage(options: PollForProcessingImageOptions): Promise<boolean> {\n  const { src } = options;\n  try {\n    await new Promise((resolve, reject) => {\n      fetch(src).then(res => {\n        if ( !res.ok ) {\n          reject(res);\n          return;\n        }\n        resolve(res);\n      });\n    });\n  } catch(e: any) {\n    if ( e.status === 423 ) {\n      return await pollForProcessingImage(options);\n    }\n    return false;\n  }\n  return true;\n}\n\nexport function checkForCloudName(cloudName: string | undefined) {\n  if (!cloudName) {\n    throw new Error('A Cloudinary Cloud name is required, please make sure NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME is set and configured in your environment.');\n  }\n}","import { OG_IMAGE_WIDTH, OG_IMAGE_WIDTH_RESIZE, OG_IMAGE_HEIGHT } from '../constants/sizes';\n\nimport { getCldImageUrl } from './getCldImageUrl';\nimport type { GetCldImageUrl, GetCldImageUrlOptions } from './getCldImageUrl';\n\n/**\n * getCldImageUrl\n */\n\n// @deprecated GetCldOgImageUrl\nexport interface GetCldOgImageUrl extends GetCldImageUrl {}\n\nexport interface GetCldOgImageUrlOptions extends GetCldImageUrlOptions {};\n\nexport function getCldOgImageUrl(options: GetCldOgImageUrlOptions) {\n  return getCldImageUrl({\n    ...options,\n    crop: options.crop || 'fill',\n    format: options.format || 'jpg',\n    gravity: options.gravity || 'center',\n    height: options.height || OG_IMAGE_HEIGHT,\n    width: options.width || OG_IMAGE_WIDTH,\n    widthResize: options.width || OG_IMAGE_WIDTH_RESIZE\n  });\n}","import { constructCloudinaryUrl } from '@cloudinary-util/url-loader';\nimport type { VideoOptions, ConfigOptions, AnalyticsOptions } from '@cloudinary-util/url-loader';\n\nimport { NEXT_CLOUDINARY_ANALYTICS_ID, NEXT_CLOUDINARY_VERSION, NEXT_VERSION } from '../constants/analytics';\nimport {checkForCloudName} from \"../lib/cloudinary\";\n\n/**\n * getCldVideoUrl\n */\n\nexport interface GetCldVideoUrlOptions extends VideoOptions {};\nexport interface GetCldVideoUrlConfig extends ConfigOptions {};\nexport interface GetCldVideoUrlAnalytics extends AnalyticsOptions {};\n\nexport function getCldVideoUrl(options: GetCldVideoUrlOptions, config?: GetCldVideoUrlConfig, analytics?: GetCldVideoUrlAnalytics) {\n  const cloudName = config?.cloud?.cloudName ?? process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME;\n  checkForCloudName(cloudName);\n  return constructCloudinaryUrl({\n    options: {\n      assetType: 'video',\n      ...options\n    },\n    config: Object.assign({\n      cloud: {\n        cloudName: cloudName\n      },\n    }, config),\n    analytics: Object.assign({\n      sdkCode: NEXT_CLOUDINARY_ANALYTICS_ID,\n      sdkSemver: NEXT_CLOUDINARY_VERSION,\n      techVersion: NEXT_VERSION,\n      feature: ''\n    }, analytics)\n  });\n}\n"],"mappings":"0jBAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,oBAAAE,EAAA,qBAAAC,EAAA,mBAAAC,IAAA,eAAAC,EAAAL,GCAA,IAAAM,EAAuC,uCCAvC,IAAAC,EAAoB,gCCApB,IAAAC,EAAA,CACE,KAAQ,kBACR,QAAW,SACX,QAAW,MACX,KAAQ,kBACR,OAAU,mBACV,MAAS,oBACT,OAAU,eACV,QAAW,CACT,MAAS,OACT,IAAO,eACP,eAAkB,qDAClB,YAAe,iCACf,KAAQ,OACR,WAAY,0FACd,EACA,aAAgB,CACd,8BAA+B,UAC/B,wBAAyB,QAC3B,EACA,gBAAmB,CACjB,cAAe,UACf,oBAAqB,UACrB,cAAe,UACf,eAAgB,WAChB,mBAAoB,WACpB,aAAc,UACd,OAAU,UACV,KAAQ,UACR,yBAA0B,UAC1B,OAAU,SACV,UAAW,UACX,KAAQ,SACR,WAAc,QAChB,EACA,iBAAoB,CAClB,KAAQ,oBACR,MAAS,YACX,CACF,EDpCO,IAAMC,EAA+B,IAC/BC,EAA0BC,EAAI,QAC9BC,EAAe,EAAAC,QAAQ,QEwB7B,SAASC,EAAkBC,EAA+B,CAC/D,GAAI,CAACA,EACH,MAAM,IAAI,MAAM,oIAAoI,CAExJ,CHZO,SAASC,EAAeC,EAAgCC,EAA+BC,EAAqC,CArBnI,IAAAC,EAAAC,EAsBE,IAAMC,GAAYD,GAAAD,EAAAF,GAAA,YAAAA,EAAQ,QAAR,YAAAE,EAAe,YAAf,KAAAC,EAA4B,QAAQ,IAAI,kCAC1D,OAAAE,EAAkBD,CAAS,KACpB,0BAAuB,CAC5B,QAAAL,EACA,OAAQ,OAAO,OAAO,CACpB,MAAO,CACL,UAAWK,CACb,CACF,EAAGJ,CAAM,EACT,UAAW,OAAO,OAAO,CACvB,QAASM,EACT,UAAWC,EACX,YAAaC,EACb,QAAS,EACX,EAAGP,CAAS,CACd,CAAC,CACH,CIxBO,SAASQ,EAAiBC,EAAkC,CACjE,OAAOC,EAAe,CACpB,GAAGD,EACH,KAAMA,EAAQ,MAAQ,OACtB,OAAQA,EAAQ,QAAU,MAC1B,QAASA,EAAQ,SAAW,SAC5B,OAAQA,EAAQ,QAAU,KAC1B,MAAOA,EAAQ,OAAS,KACxB,YAAaA,EAAQ,OAAS,IAChC,CAAC,CACH,CCxBA,IAAAE,EAAuC,uCAchC,SAASC,EAAeC,EAAgCC,EAA+BC,EAAqC,CAdnI,IAAAC,EAAAC,EAeE,IAAMC,GAAYD,GAAAD,EAAAF,GAAA,YAAAA,EAAQ,QAAR,YAAAE,EAAe,YAAf,KAAAC,EAA4B,QAAQ,IAAI,kCAC1D,OAAAE,EAAkBD,CAAS,KACpB,0BAAuB,CAC5B,QAAS,CACP,UAAW,QACX,GAAGL,CACL,EACA,OAAQ,OAAO,OAAO,CACpB,MAAO,CACL,UAAWK,CACb,CACF,EAAGJ,CAAM,EACT,UAAW,OAAO,OAAO,CACvB,QAASM,EACT,UAAWC,EACX,YAAaC,EACb,QAAS,EACX,EAAGP,CAAS,CACd,CAAC,CACH","names":["helpers_exports","__export","getCldImageUrl","getCldOgImageUrl","getCldVideoUrl","__toCommonJS","import_url_loader","import_package","package_default","NEXT_CLOUDINARY_ANALYTICS_ID","NEXT_CLOUDINARY_VERSION","package_default","NEXT_VERSION","nextPkg","checkForCloudName","cloudName","getCldImageUrl","options","config","analytics","_a","_b","cloudName","checkForCloudName","NEXT_CLOUDINARY_ANALYTICS_ID","NEXT_CLOUDINARY_VERSION","NEXT_VERSION","getCldOgImageUrl","options","getCldImageUrl","import_url_loader","getCldVideoUrl","options","config","analytics","_a","_b","cloudName","checkForCloudName","NEXT_CLOUDINARY_ANALYTICS_ID","NEXT_CLOUDINARY_VERSION","NEXT_VERSION"]}