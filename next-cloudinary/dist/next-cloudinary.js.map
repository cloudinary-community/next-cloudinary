{"version":3,"file":"next-cloudinary.js","sources":["../src/lib/cloudinary.js","../src/plugins/cropping.js","../src/plugins/effects.js","../src/constants/qualifiers.js","../src/plugins/overlays.js","../src/plugins/raw-transformations.js","../src/plugins/remove-background.js","../src/plugins/underlays.js","../src/plugins/zoompan.js","../src/loaders/cloudinary-loader.js","../src/components/CldImage/CldImage.js","../src/components/CldUploadWidget/CldUploadWidget.js","../src/components/CldUploadButton/CldUploadButton.js"],"sourcesContent":["import { Cloudinary } from '@cloudinary/url-gen';\n\nconst cld = new Cloudinary({\n  cloud: {\n    cloudName: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME\n  },\n  url: {\n    // Used to avoid issues with SSR particularly for the blurred placeholder\n    analytics: false\n  }\n});\n\n/**\n * Retrieves the public id of a cloudiary image url. If no url is recognized it returns the parameter it self.\n * If it's recognized that is a url and it's not possible to get the public id, it warns the user.\n *\n * @param {string} src The cloudiary url or public id.\n *\n * @return {string} The images public id\n */\nexport function getPublicId(src) {\n  if ( src.includes('res.cloudinary.com') ) {\n    const regexWithTransformations = /(https?)\\:\\/\\/(res.cloudinary.com)\\/([^\\/]+)\\/(image|video|raw)\\/(upload|authenticated)\\/(.*)\\/(v[0-9]+)\\/(.+)(?:\\.[a-z]{3})?/\n    const regexWithoutTransformations = /(https?)\\:\\/\\/(res.cloudinary.com)\\/([^\\/]+)\\/(image|video|raw)\\/(upload|authenticated)\\/(v[0-9]+)\\/(.+)(?:\\.[a-z]{3})?/\n\n    const withTransformations = src.match(regexWithTransformations)\n    const withoutTransformations = src.match(regexWithoutTransformations)\n\n    if ( withTransformations ) {\n      return withTransformations[withTransformations.length - 1]\n    } else if ( withoutTransformations ) {\n      return withoutTransformations[withoutTransformations.length - 1]\n    } else {\n      console.warn(`Not possible to retrieve the publicUrl from ${src}, make sure it's a valid cloudinary image url.`)\n    }\n  }\n  return src;\n}\n\n/**\n * createPlaceholderUrl\n */\n\nexport function createPlaceholderUrl({ src, placeholder }) {\n  const cldImage = cld.image(src)\n                      .resize('c_limit,w_100')\n                      .delivery('q_1')\n                      .format('auto');\n\n  if ( placeholder === 'grayscale' ) {\n    cldImage.effect('e_grayscale');\n  }\n\n  if ( placeholder.includes('color:') ) {\n    const color = placeholder.split(':').splice(1).join(':')\n    cldImage.effect('e_grayscale');\n    cldImage.effect(`e_colorize:60,co_${color}`);\n  }\n\n  return cldImage.toURL();\n}\n","const cropsGravityAuto = [ 'crop', 'fill', 'lfill', 'fill_pad', 'thumb' ];\n\nexport const props = ['crop', 'gravity'];\n\nexport function plugin({ cldImage, options, cldOptions } = {}) {\n  const { width, height } = options;\n  const { crop = 'limit', gravity } = cldOptions;\n\n  let transformationString = `c_${crop},w_${width}`;\n\n  if ( !gravity && cropsGravityAuto.includes(crop) ) {\n    gravity = 'auto';\n  }\n\n  if ( !['limit'].includes(crop) ) {\n    transformationString = `${transformationString},h_${height}`;\n  }\n\n  if ( gravity ) {\n    if ( gravity === 'auto' && !cropsGravityAuto.includes(crop) ) {\n      console.warn('Auto gravity can only be used with crop, fill, lfill, fill_pad or thumb. Not applying gravity.');\n    } else {\n      transformationString = `${transformationString},g_${gravity}`;\n    }\n  }\n\n  cldImage.resize(transformationString);\n}","const params = [\n  'art',\n  {\n    prop: 'autoBrightness',\n    effect: 'auto_brightness',\n  },\n  {\n    prop: 'autoColor',\n    effect: 'auto_color',\n  },\n  {\n    prop: 'autoContrast',\n    effect: 'auto_contrast',\n  },\n  {\n    prop: 'assistColorblind',\n    effect: 'assist_colorblind',\n  },\n  'blackwhite',\n  'blur',\n  {\n    prop: 'blurFaces',\n    effect: 'blur_faces',\n  },\n  {\n    prop: 'blurRegion',\n    effect: 'blur_region',\n  },\n  'brightness',\n  {\n    prop: 'brightnessHSB',\n    effect: 'brightness_hsb',\n  },\n  'cartoonify',\n  'colorize',\n  'contrast',\n  'distort',\n  {\n    prop: 'fillLight',\n    effect: 'fill_light',\n  },\n  'gamma',\n  {\n    prop: 'gradientFade',\n    effect: 'gradient_fade',\n  },\n  'grayscale',\n  'improve',\n  'negate',\n  {\n    prop: 'oilPaint',\n    effect: 'oil_paint',\n  },\n  'outline',\n  'pixelate',\n  {\n    prop: 'pixelateFaces',\n    effect: 'pixelate_faces',\n  },\n  {\n    prop: 'pixelateRegion',\n    effect: 'pixelate_region',\n  },\n  'redeye',\n  {\n    prop: 'replaceColor',\n    effect: 'replace_color',\n  },\n  'saturation',\n  'sepia',\n  'shadow',\n  'sharpen',\n  'shear',\n  {\n    prop: 'simulateColorblind',\n    effect: 'simulate_colorblind',\n  },\n  'tint',\n  {\n    prop: 'unsharpMask',\n    effect: 'unsharp_mask',\n  },\n  'vectorize',\n  'vibrance',\n  'vignette',\n];\n\nexport const props = params.map(param => param.prop || param);\n\nexport function plugin({ cldImage, cldOptions } = {}) {\n  params.forEach(key => {\n\n    const prop = key.prop || key;\n    const effect = key.effect || key;\n\n    if ( prop === 'oilPaint' && cldOptions[prop]) {\n      console.log('cldOptions[prop]', cldOptions[prop])\n    }\n    if ( cldOptions[prop] === true ) {\n      cldImage.effect(`e_${effect}`);\n    } else if ( typeof cldOptions[prop] === 'string' ) {\n      cldImage.effect(`e_${effect}:${cldOptions[prop]}`);\n    }\n  });\n}","// aspectRatio\n\nexport const primary = {\n  aspectRatio: {\n    qualifier: 'ar'\n  },\n  crop: {\n    qualifier: 'c'\n  },\n  gravity: {\n    qualifier: 'g'\n  },\n  height: {\n    qualifier: 'h'\n  },\n  width: {\n    qualifier: 'w'\n  },\n};\n\nexport const position = {\n  angle: {\n    qualifier: 'a'\n  },\n  gravity: {\n    qualifier: 'g'\n  },\n  x: {\n    qualifier: 'x'\n  },\n  y: {\n    qualifier: 'y'\n  },\n}\n\nexport const text = {\n  color: {\n    qualifier: 'co',\n    location: 'primary'\n  },\n  fontFamily: {\n    qualifier: false\n  },\n  fontSize: {\n    qualifier: false\n  },\n  fontWeight: {\n    qualifier: false\n  },\n  letterSpacing: {\n    qualifier: 'letter_spacing'\n  },\n  textDecoration: {\n    qualifier: false\n  }\n}","import {\n  primary as qualifiersPrimary,\n  text as qualifiersText,\n  position as qualifiersPosition\n} from '../constants/qualifiers';\n\nexport const props = ['overlays'];\n\nexport function plugin({ cldImage, options, cldOptions } = {}) {\n  const { overlays = [] } = cldOptions;\n\n  const type = 'overlay';\n  const typeQualifier = 'l';\n\n  overlays.forEach(({ publicId, position, text, effects: layerEffects = [], ...options }) => {\n    const hasPublicId = typeof publicId === 'string';\n    const hasText = typeof text === 'object';\n    const hasPosition = typeof position === 'object';\n\n    if ( !hasPublicId && !hasText ) {\n      console.warn(`An ${type} is missing Public ID or Text`);\n      return;\n    }\n\n    // Start to construct the transformation string using text or the public ID\n    // if it's image-based\n\n    let layerTransformation;\n\n    if ( hasText ) {\n      layerTransformation = `${typeQualifier}_text`;\n    } else {\n      layerTransformation = `${typeQualifier}_${publicId.replace(/\\//g, ':')}`;\n    }\n\n    // Begin organizing transformations based on what it is and the location\n    // it needs to be placed in the URL\n\n    const primary = [];\n    const applied = [];\n\n    // Gemeral options\n\n    Object.keys(options).forEach(key => {\n      if ( !qualifiersPrimary[key] ) return;\n      const { qualifier } = qualifiersPrimary[key];\n      primary.push(`${qualifier}_${options[key]}`);\n    });\n\n    // Layer effects\n\n    layerEffects.forEach(effect => {\n      Object.keys(effect).forEach(key => {\n        if ( !qualifiersPrimary[key] ) return;\n        const { qualifier } = qualifiersPrimary[key];\n        primary.push(`${qualifier}_${effect[key]}`);\n      });\n    });\n\n    // Text styling\n\n    if ( hasText ) {\n      const textTransformations = [];\n\n      Object.keys(text).forEach(key => {\n        if ( !qualifiersText[key] ) return;\n\n        const { qualifier, location } = qualifiersText[key];\n\n        if ( location === 'primary' ) {\n          primary.push(`${qualifier}_${text[key]}`);\n        } else {\n          textTransformations.push(text[key]);\n        }\n      });\n\n      layerTransformation = `${layerTransformation}:${textTransformations.join('_')}:${text.text}`\n    }\n\n    // Positioning\n\n    if ( hasPosition ) {\n      Object.keys(position).forEach(key => {\n        if ( !qualifiersPosition[key] ) return;\n\n        const { qualifier } = qualifiersPosition[key];\n\n        applied.push(`${qualifier}_${position[key]}`);\n      });\n    }\n\n    // Add all primary transformations\n\n    layerTransformation = `${layerTransformation},${primary.join(',')}`;\n\n    // Add all applied transformations\n\n    layerTransformation = `${layerTransformation}/fl_layer_apply`;\n\n    if ( applied.length > 0 ) {\n      layerTransformation = `${layerTransformation},${applied.join(',')}`;\n    }\n\n    // Finally add it to the image\n\n    cldImage.addTransformation(layerTransformation);\n  });\n}","export const props = ['rawTransformations'];\n\nexport function plugin({ cldImage, cldOptions } = {}) {\n  const { rawTransformations = [] } = cldOptions;\n\n  rawTransformations.forEach(transformation => {\n    cldImage.addTransformation(transformation);\n  });\n}","export const props = ['removeBackground'];\n\nexport function plugin({ cldImage, options, cldOptions } = {}) {\n  const { removeBackground = false } = cldOptions;\n  if ( removeBackground ) {\n    cldImage.effect('e_background_removal');\n  }\n}","import {\n  primary as qualifiersPrimary,\n  text as qualifiersText,\n  position as qualifiersPosition\n} from '../constants/qualifiers';\n\nexport const props = ['underlays'];\n\nexport function plugin({ cldImage, options, cldOptions } = {}) {\n  const { underlays = [] } = cldOptions;\n\n  const type = 'underlay';\n  const typeQualifier = 'u';\n\n  underlays.forEach(({ publicId, type, position, text, effects: layerEffects = [], ...options }) => {\n    const hasPublicId = typeof publicId === 'string';\n    const hasPosition = typeof position === 'object';\n\n    if ( !hasPublicId ) {\n      console.warn(`An ${type} is missing a Public ID`);\n      return;\n    }\n\n    // Start to construct the transformation string using text or the public ID\n    // if it's image-based\n\n    let layerTransformation = `${typeQualifier}_${publicId.replace(/\\//g, ':')}`;\n\n    // Begin organizing transformations based on what it is and the location\n    // it needs to be placed in the URL\n\n    const primary = [];\n    const applied = [];\n\n    // Gemeral options\n\n    Object.keys(options).forEach(key => {\n      if ( !qualifiersPrimary[key] ) return;\n      const { qualifier } = qualifiersPrimary[key];\n      primary.push(`${qualifier}_${options[key]}`);\n    });\n\n    // Layer effects\n\n    layerEffects.forEach(effect => {\n      Object.keys(effect).forEach(key => {\n        if ( !qualifiersPrimary[key] ) return;\n        const { qualifier } = qualifiersPrimary[key];\n        primary.push(`${qualifier}_${effect[key]}`);\n      });\n    });\n\n    // Positioning\n\n    if ( hasPosition ) {\n      Object.keys(position).forEach(key => {\n        if ( !qualifiersPosition[key] ) return;\n\n        const { qualifier } = qualifiersPosition[key];\n\n        applied.push(`${qualifier}_${position[key]}`);\n      });\n    }\n\n    // Add all primary transformations\n\n    layerTransformation = `${layerTransformation},${primary.join(',')}`;\n\n    // Add all applied transformations\n\n    layerTransformation = `${layerTransformation}/fl_layer_apply`;\n\n    if ( applied.length > 0 ) {\n      layerTransformation = `${layerTransformation},${applied.join(',')}`;\n    }\n\n    // Finally add it to the image\n\n    cldImage.addTransformation(layerTransformation);\n  });\n}","export const props = ['zoompan'];\n\nexport function plugin({ cldImage, cldOptions } = {}) {\n  const { zoompan = false } = cldOptions;\n  const options = {};\n\n  if ( zoompan === true ) {\n    cldImage.effect('e_zoompan');\n  } else if ( typeof zoompan === 'string' ) {\n    if ( zoompan === 'loop' ) {\n      cldImage.effect('e_zoompan');\n      cldImage.effect('e_loop');\n    } else {\n      cldImage.effect(`e_zoompan:${zoompan}`);\n    }\n  } else if ( typeof zoompan === 'object' ) {\n    let zoompanEffect = 'e_zoompan';\n\n    if ( typeof zoompan.options === 'string' ) {\n      zoompanEffect = `${zoompanEffect}${zoompan.options}`;\n    }\n\n    cldImage.effect(zoompanEffect);\n\n    let loopEffect;\n\n    if ( zoompan.loop === true ) {\n      loopEffect = 'e_loop';\n    } else if ( typeof zoompan.loop === 'string' ) {\n      loopEffect = `e_loop${zoompan.loop}`;\n    }\n\n    if ( loopEffect ) {\n      cldImage.effect(loopEffect);\n    }\n  }\n\n  if ( zoompan !== false ) {\n    options.format = 'gif';\n  }\n\n  return {\n    options\n  }\n}","import { Cloudinary } from '@cloudinary/url-gen';\nimport { getPublicId } from '../lib/cloudinary';\n\nimport * as croppingPlugin from '../plugins/cropping';\nimport * as effectsPlugin from '../plugins/effects';\nimport * as overlaysPlugin from '../plugins/overlays';\nimport * as rawTransformationsPlugin from '../plugins/raw-transformations';\nimport * as removeBackgroundPlugin from '../plugins/remove-background';\nimport * as underlaysPlugin from '../plugins/underlays';\nimport * as zoompanPlugin from '../plugins/zoompan';\n\nimport {\n  primary as qualifiersPrimary,\n  text as qualifiersText,\n  position as qualifiersPosition\n} from '../constants/qualifiers';\n\nlet cld;\n\nexport const transformationPlugins = [\n  // Background Removal must always come first\n  removeBackgroundPlugin,\n\n  croppingPlugin,\n  effectsPlugin,\n  overlaysPlugin,\n  underlaysPlugin,\n  zoompanPlugin,\n\n  // Raw transformations needs to be last simply to make sure\n  // it's always expected to applied the same way\n\n  rawTransformationsPlugin\n];\n\nexport function cloudinaryLoader(defaultOptions, cldOptions, cldConfig = {}) {\n  if ( !cld ) {\n    cld = new Cloudinary({\n      cloud: {\n        cloudName: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME\n      },\n      url: {\n        // Used to avoid issues with SSR particularly for the blurred placeholder\n        analytics: false\n      },\n      ...cldConfig\n    });\n  }\n\n  const options = {\n    format: 'auto',\n    quality: 'auto',\n    ...defaultOptions\n  };\n  const publicId = getPublicId(options.src);\n\n  const cldImage = cld.image(publicId);\n\n  transformationPlugins.forEach(({ plugin }) => {\n    const { options: pluginOptions } = plugin({\n      cldImage,\n      options,\n      cldOptions\n    }) || {};\n\n    if ( pluginOptions?.format ) {\n      options.format = pluginOptions.format;\n    }\n  });\n\n  return cldImage\n          .format(options.format)\n          .delivery(`q_${options.quality}`)\n          .toURL();\n}","import Image from 'next/image';\n\nimport { createPlaceholderUrl, getPublicId } from '../../lib/cloudinary';\nimport { cloudinaryLoader, transformationPlugins } from '../../loaders/cloudinary-loader';\n\nconst CldImage = props => {\n\n  const CLD_OPTIONS = [];\n\n  transformationPlugins.forEach(({ props = [] }) => {\n    props.forEach(prop => {\n      if ( CLD_OPTIONS.includes(prop) ) {\n        throw new Error(`Option ${prop} already exists!`);\n      }\n      CLD_OPTIONS.push(prop);\n    });\n  })\n\n  // Construct the base Image component props by filtering out Cloudinary-specific props\n\n  const imageProps = {};\n\n  Object.keys(props)\n    .filter(key => !CLD_OPTIONS.includes(key))\n    .forEach(key => imageProps[key] = props[key]);\n\n  // Construct Cloudinary-specific props by looking for values for any of the supported prop keys\n\n  const cldOptions = {};\n\n  CLD_OPTIONS.forEach(key => {\n    if ( props[key] ) {\n      cldOptions[key] = props[key];\n    }\n  });\n\n  // If we see a placeholder option, configure a Cloudinary-based URL.\n  // The resulting image will always be blurred per Next.js, so we're\n  // limited on options for placeholders.\n  //\n  // We need to do this logic here as we potentially need to mutate\n  // an Image component prop as opposed to simply the URL\n  //\n  // https://nextjs.org/docs/api-reference/next/image#blurdataurl\n\n  if ( imageProps.placeholder ) {\n    const publicId = getPublicId(props.src);\n\n    imageProps.blurDataURL = createPlaceholderUrl({\n      src: publicId,\n      placeholder: props.placeholder\n    });\n\n    if ( imageProps.placeholder !== 'blur' ) {\n      imageProps.placeholder = 'blur';\n    }\n  }\n\n  return (\n    <Image\n      {...imageProps}\n      loader={(options) => cloudinaryLoader({ ...imageProps, options }, cldOptions)}\n    />\n  );\n}\n\nexport default CldImage;","import { useRef } from 'react';\nimport Script from 'next/script';\n\nconst CldUploadWidget = ({\n  children,\n  onUpload,\n  options,\n  signed,\n  signatureEndpoint,\n}) => {\n  const cloudinary = useRef();\n  const widget = useRef();\n\n  /**\n   * generateSignature\n   * @description Makes a request to an endpoint to sign Cloudinary parameters as part of widget creation\n   */\n\n  function generateSignature(callback, paramsToSign) {\n    fetch(signatureEndpoint, {\n      method: \"POST\",\n      body: JSON.stringify({\n        paramsToSign,\n      }),\n    })\n      .then((r) => r.json())\n      .then(({ signature }) => {\n        callback(signature);\n      });\n  }\n\n  /**\n   * createWidget\n   * @description Creates a new instance of the Cloudinary widget and stores in a ref\n   */\n\n  function createWidget() {\n    // When creating a signed upload, you need to provide both your Cloudinary API Key\n    // as well as a signature generator function that will sign any paramters\n    // either on page load or during the upload process. Read more about signed uploads at:\n    // https://cloudinary.com/documentation/upload_widget#signed_uploads\n\n    const totalOptions = {\n      ...options,\n      ...(!!signed && {\n        uploadSignature: generateSignature,\n      }),\n    };\n\n    // no need for apiSecret because of api/sign-cloudinary-params\n    if (signed && !totalOptions.apiKey) {\n      return new Error(\"Signed Upload needs apiKey!\");\n    }\n\n    return cloudinary.current?.createUploadWidget(\n      totalOptions,\n      function (error, result) {\n        // The callback is a bit more chatty than failed or success so\n        // only trigger when one of those are the case. You can additionally\n        // create a separate handler such as onEvent and trigger it on\n        // ever occurance\n        if (error || result.event === \"success\") {\n          onUpload(error, result, widget?.current);\n        }\n      }\n    );\n  }\n\n  /**\n   * open\n   * @description When triggered, uses the current widget instance to open the upload modal\n   */\n\n  function open() {\n    if (!widget?.current) {\n      widget.current = createWidget();\n    }\n\n    widget?.current && widget.current.open();\n  }\n\n  /**\n   * handleOnLoad\n   * @description Stores the Cloudinary window instance to a ref when the widget script loads\n   */\n\n  function handleOnLoad() {\n    cloudinary.current = window.cloudinary;\n  }\n\n  return (\n    <>\n      {children({\n        cloudinary: cloudinary.current,\n        widget: widget.current,\n        open,\n      })}\n      <Script\n        id={`cloudinary-${Math.floor(Math.random() * 100)}`}\n        src=\"https://widget.cloudinary.com/v2.0/global/all.js\"\n        onLoad={handleOnLoad}\n        onError={(e) => {\n          console.error(\"Script failed to load\", e);\n        }}\n      />\n    </>\n  );\n};\n\nexport default CldUploadWidget;\n","import CldUploadWidget from '../CldUploadWidget';\n\nconst CldUploadButton = ({\n  onUpload,\n  options,\n  signed,\n  label,\n  children,\n  ...props\n}) => {\n  return (\n    <>\n      <CldUploadWidget\n        signed={signed}\n        options={options}\n        onUpload={onUpload}\n        signatureEndpoint={signed ?? props.signatureEndpoint}\n      >\n        {({ open }) => {\n          function handleOnClick(e) {\n            e.preventDefault();\n            open();\n          }\n          return (\n            <button onClick={handleOnClick} {...props}>\n              {children}\n            </button>\n          );\n        }}\n      </CldUploadWidget>\n    </>\n  );\n};\n\nexport default CldUploadButton;\n"],"names":["cld","Cloudinary","cloud","cloudName","process","env","NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME","url","analytics","getPublicId","src","includes","regexWithTransformations","regexWithoutTransformations","withTransformations","match","withoutTransformations","length","console","warn","createPlaceholderUrl","placeholder","cldImage","image","resize","delivery","format","effect","color","split","splice","join","toURL","cropsGravityAuto","props","plugin","options","cldOptions","width","height","crop","gravity","transformationString","params","prop","map","param","forEach","key","log","primary","aspectRatio","qualifier","position","angle","x","y","text","location","fontFamily","fontSize","fontWeight","letterSpacing","textDecoration","overlays","type","typeQualifier","publicId","effects","layerEffects","_excluded","hasPublicId","hasText","hasPosition","layerTransformation","replace","applied","Object","keys","qualifiersPrimary","push","textTransformations","qualifiersText","qualifiersPosition","addTransformation","rawTransformations","transformation","removeBackground","underlays","zoompan","zoompanEffect","loopEffect","loop","transformationPlugins","removeBackgroundPlugin","croppingPlugin","effectsPlugin","overlaysPlugin","underlaysPlugin","zoompanPlugin","rawTransformationsPlugin","cloudinaryLoader","defaultOptions","cldConfig","quality","pluginOptions","CldImage","CLD_OPTIONS","Error","imageProps","filter","blurDataURL","_jsx","Image","CldUploadWidget","children","onUpload","signed","signatureEndpoint","cloudinary","useRef","widget","generateSignature","callback","paramsToSign","fetch","method","body","JSON","stringify","then","r","json","signature","createWidget","totalOptions","uploadSignature","apiKey","current","createUploadWidget","error","result","event","open","handleOnLoad","window","_jsxs","_Fragment","Script","Math","floor","random","e","CldUploadButton","handleOnClick","preventDefault"],"mappings":"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"}