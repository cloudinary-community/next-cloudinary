{"version":3,"file":"next-cloudinary.js","sources":["../src/plugins/cropping.js","../src/plugins/effects.js","../src/constants/qualifiers.js","../src/plugins/overlays.js","../src/plugins/raw-transformations.js","../src/plugins/remove-background.js","../src/plugins/underlays.js","../src/plugins/zoompan.js","../src/lib/cloudinary.js","../src/loaders/cloudinary-loader.js","../src/components/CldImage/CldImage.js","../src/components/CldOgImage/CldOgImage.js","../src/components/CldUploadWidget/CldUploadWidget.js","../src/components/CldUploadButton/CldUploadButton.js"],"sourcesContent":["const cropsGravityAuto = [ 'crop', 'fill', 'lfill', 'fill_pad', 'thumb' ];\n\nexport const props = ['crop', 'gravity'];\n\nexport function plugin({ cldImage, options } = {}) {\n  const { width, height, crop = 'limit' } = options;\n\n  let transformationString = `c_${crop},w_${width}`;\n\n  if ( !options.gravity && cropsGravityAuto.includes(crop) ) {\n    options.gravity = 'auto';\n  }\n\n  if ( !['limit'].includes(crop) ) {\n    transformationString = `${transformationString},h_${height}`;\n  }\n\n  if ( options.gravity ) {\n    if ( options.gravity === 'auto' && !cropsGravityAuto.includes(crop) ) {\n      console.warn('Auto gravity can only be used with crop, fill, lfill, fill_pad or thumb. Not applying gravity.');\n    } else {\n      transformationString = `${transformationString},g_${options.gravity}`;\n    }\n  }\n\n  cldImage.resize(transformationString);\n}\n","const params = [\n  'art',\n  {\n    prop: 'autoBrightness',\n    effect: 'auto_brightness',\n  },\n  {\n    prop: 'autoColor',\n    effect: 'auto_color',\n  },\n  {\n    prop: 'autoContrast',\n    effect: 'auto_contrast',\n  },\n  {\n    prop: 'assistColorblind',\n    effect: 'assist_colorblind',\n  },\n  'blackwhite',\n  'blur',\n  {\n    prop: 'blurFaces',\n    effect: 'blur_faces',\n  },\n  {\n    prop: 'blurRegion',\n    effect: 'blur_region',\n  },\n  'brightness',\n  {\n    prop: 'brightnessHSB',\n    effect: 'brightness_hsb',\n  },\n  'cartoonify',\n  'colorize',\n  'contrast',\n  'distort',\n  {\n    prop: 'fillLight',\n    effect: 'fill_light',\n  },\n  'gamma',\n  {\n    prop: 'gradientFade',\n    effect: 'gradient_fade',\n  },\n  'grayscale',\n  'improve',\n  'negate',\n  {\n    prop: 'oilPaint',\n    effect: 'oil_paint',\n  },\n  'outline',\n  'pixelate',\n  {\n    prop: 'pixelateFaces',\n    effect: 'pixelate_faces',\n  },\n  {\n    prop: 'pixelateRegion',\n    effect: 'pixelate_region',\n  },\n  'redeye',\n  {\n    prop: 'replaceColor',\n    effect: 'replace_color',\n  },\n  'saturation',\n  'sepia',\n  'shadow',\n  'sharpen',\n  'shear',\n  {\n    prop: 'simulateColorblind',\n    effect: 'simulate_colorblind',\n  },\n  'tint',\n  {\n    prop: 'unsharpMask',\n    effect: 'unsharp_mask',\n  },\n  'vectorize',\n  'vibrance',\n  'vignette',\n];\n\nexport const props = params.map(param => param.prop || param);\n\nexport function plugin({ cldImage, options } = {}) {\n  params.forEach(key => {\n    const prop = key.prop || key;\n    const effect = key.effect || key;\n\n    if ( options[prop] === true ) {\n      cldImage.effect(`e_${effect}`);\n    } else if ( typeof options[prop] === 'string' ) {\n      cldImage.effect(`e_${effect}:${options[prop]}`);\n    }\n  });\n}","// aspectRatio\n\nexport const primary = {\n  aspectRatio: {\n    qualifier: 'ar'\n  },\n  crop: {\n    qualifier: 'c'\n  },\n  gravity: {\n    qualifier: 'g'\n  },\n  height: {\n    qualifier: 'h'\n  },\n  width: {\n    qualifier: 'w'\n  },\n};\n\nexport const position = {\n  angle: {\n    qualifier: 'a'\n  },\n  gravity: {\n    qualifier: 'g'\n  },\n  x: {\n    qualifier: 'x'\n  },\n  y: {\n    qualifier: 'y'\n  },\n}\n\nexport const text = {\n  color: {\n    qualifier: 'co',\n    location: 'primary'\n  },\n  fontFamily: {\n    qualifier: false\n  },\n  fontSize: {\n    qualifier: false\n  },\n  fontWeight: {\n    qualifier: false\n  },\n  letterSpacing: {\n    qualifier: 'letter_spacing'\n  },\n  textDecoration: {\n    qualifier: false\n  }\n}","import {\n  primary as qualifiersPrimary,\n  text as qualifiersText,\n  position as qualifiersPosition\n} from '../constants/qualifiers';\n\nexport const props = ['text', 'overlays'];\n\nexport const DEFAULT_TEXT_OPTIONS = {\n  color: 'black',\n  fontFamily: 'Arial',\n  fontSize: 200,\n  fontWeight: 'bold',\n};\n\nexport function plugin({ cldImage, options } = {}) {\n  const { text, overlays = [] } = options;\n\n  const type = 'overlay';\n  const typeQualifier = 'l';\n\n  if ( Array.isArray(overlays) ) {\n    overlays.forEach(applyOverlay);\n  }\n\n  if ( typeof text === 'string' ) {\n    applyOverlay({\n      text: {\n        ...DEFAULT_TEXT_OPTIONS,\n        text\n      }\n    })\n  } else if ( typeof text === 'object' ) {\n    applyOverlay({\n      text: {\n        ...DEFAULT_TEXT_OPTIONS,\n        ...text\n      }\n    })\n  }\n\n\n\n  /**\n   * applyOverlay\n   */\n\n  function applyOverlay({ publicId, position, text, effects: layerEffects = [], ...options }) {\n    const hasPublicId = typeof publicId === 'string';\n    const hasText = typeof text === 'object' || typeof text === 'string';\n    const hasPosition = typeof position === 'object';\n\n    if ( !hasPublicId && !hasText ) {\n      console.warn(`An ${type} is missing Public ID or Text`);\n      return;\n    }\n\n    // Start to construct the transformation string using text or the public ID\n    // if it's image-based\n\n    let layerTransformation;\n\n    if ( hasText ) {\n      layerTransformation = `${typeQualifier}_text`;\n    } else {\n      layerTransformation = `${typeQualifier}_${publicId.replace(/\\//g, ':')}`;\n    }\n\n    // Begin organizing transformations based on what it is and the location\n    // it needs to be placed in the URL\n\n    const primary = [];\n    const applied = [];\n\n    // Gemeral options\n\n    Object.keys(options).forEach(key => {\n      if ( !qualifiersPrimary[key] ) return;\n      const { qualifier } = qualifiersPrimary[key];\n      primary.push(`${qualifier}_${options[key]}`);\n    });\n\n    // Layer effects\n\n    layerEffects.forEach(effect => {\n      Object.keys(effect).forEach(key => {\n        if ( !qualifiersPrimary[key] ) return;\n        const { qualifier } = qualifiersPrimary[key];\n        primary.push(`${qualifier}_${effect[key]}`);\n      });\n    });\n\n    // Text styling\n\n    if ( hasText ) {\n      if ( typeof text === 'string' ) {\n        text = {\n          ...DEFAULT_TEXT_OPTIONS,\n          text\n        }\n      }\n\n\n      const textTransformations = [];\n\n      Object.keys(text).forEach(key => {\n        if ( !qualifiersText[key] ) return;\n\n        const { qualifier, location } = qualifiersText[key];\n\n        if ( location === 'primary' ) {\n          primary.push(`${qualifier}_${text[key]}`);\n        } else {\n          textTransformations.push(text[key]);\n        }\n      });\n\n      layerTransformation = `${layerTransformation}:${textTransformations.join('_')}:${text.text}`\n    }\n\n    // Positioning\n\n    if ( hasPosition ) {\n      Object.keys(position).forEach(key => {\n        if ( !qualifiersPosition[key] ) return;\n\n        const { qualifier } = qualifiersPosition[key];\n\n        applied.push(`${qualifier}_${position[key]}`);\n      });\n    }\n\n    // Add all primary transformations\n\n    layerTransformation = `${layerTransformation},${primary.join(',')}`;\n\n    // Add all applied transformations\n\n    layerTransformation = `${layerTransformation}/fl_layer_apply,fl_no_overflow`;\n\n    if ( applied.length > 0 ) {\n      layerTransformation = `${layerTransformation},${applied.join(',')}`;\n    }\n\n    // Finally add it to the image\n\n    cldImage.addTransformation(layerTransformation);\n  }\n}","export const props = ['rawTransformations'];\n\nexport function plugin({ cldImage, options } = {}) {\n  const { rawTransformations = [] } = options;\n\n  rawTransformations.forEach(transformation => {\n    cldImage.addTransformation(transformation);\n  });\n}","export const props = ['removeBackground'];\n\nexport function plugin({ cldImage, options } = {}) {\n  const { removeBackground = false } = options;\n  if ( removeBackground ) {\n    cldImage.effect('e_background_removal');\n  }\n}","import {\n  primary as qualifiersPrimary,\n  text as qualifiersText,\n  position as qualifiersPosition\n} from '../constants/qualifiers';\n\nexport const props = ['underlay', 'underlays'];\n\nexport function plugin({ cldImage, options } = {}) {\n  const { underlay, underlays = [] } = options;\n\n  const type = 'underlay';\n  const typeQualifier = 'u';\n\n  if ( Array.isArray(underlays) ) {\n    underlays.forEach(applyUnderlay);\n  }\n\n  if ( typeof underlay === 'string' ) {\n\n    const underlayOptions = {\n      publicId: underlay,\n      crop: 'fill'\n    }\n\n    if ( options.width ) {\n      underlayOptions.width = options.width;\n    }\n\n    if ( options.height ) {\n      underlayOptions.height = options.height;\n    }\n\n    applyUnderlay(underlayOptions);\n  }\n\n  /**\n   * applyUnderlay\n   */\n\n  function applyUnderlay({ publicId, type, position, text, effects: layerEffects = [], ...options }) {\n    const hasPublicId = typeof publicId === 'string';\n    const hasPosition = typeof position === 'object';\n\n    if ( !hasPublicId ) {\n      console.warn(`An ${type} is missing a Public ID`);\n      return;\n    }\n\n    // Start to construct the transformation string using text or the public ID\n    // if it's image-based\n\n    let layerTransformation = `${typeQualifier}_${publicId.replace(/\\//g, ':')}`;\n\n    // Begin organizing transformations based on what it is and the location\n    // it needs to be placed in the URL\n\n    const primary = [];\n    const applied = [];\n\n    // Gemeral options\n\n    Object.keys(options).forEach(key => {\n      if ( !qualifiersPrimary[key] ) return;\n      const { qualifier } = qualifiersPrimary[key];\n      primary.push(`${qualifier}_${options[key]}`);\n    });\n\n    // Layer effects\n\n    layerEffects.forEach(effect => {\n      Object.keys(effect).forEach(key => {\n        if ( !qualifiersPrimary[key] ) return;\n        const { qualifier } = qualifiersPrimary[key];\n        primary.push(`${qualifier}_${effect[key]}`);\n      });\n    });\n\n    // Positioning\n\n    if ( hasPosition ) {\n      Object.keys(position).forEach(key => {\n        if ( !qualifiersPosition[key] ) return;\n\n        const { qualifier } = qualifiersPosition[key];\n\n        applied.push(`${qualifier}_${position[key]}`);\n      });\n    }\n\n    // Add all primary transformations\n\n    layerTransformation = `${layerTransformation},${primary.join(',')}`;\n\n    // Add all applied transformations\n\n    layerTransformation = `${layerTransformation}/fl_layer_apply,fl_no_overflow`;\n\n    if ( applied.length > 0 ) {\n      layerTransformation = `${layerTransformation},${applied.join(',')}`;\n    }\n\n    // Finally add it to the image\n\n    cldImage.addTransformation(layerTransformation);\n  }\n}","export const props = ['zoompan'];\n\nexport function plugin({ cldImage, options } = {}) {\n  const { zoompan = false } = options;\n  const overrides = {};\n\n  if ( zoompan === true ) {\n    cldImage.effect('e_zoompan');\n  } else if ( typeof zoompan === 'string' ) {\n    if ( zoompan === 'loop' ) {\n      cldImage.effect('e_zoompan');\n      cldImage.effect('e_loop');\n    } else {\n      cldImage.effect(`e_zoompan:${zoompan}`);\n    }\n  } else if ( typeof zoompan === 'object' ) {\n    let zoompanEffect = 'e_zoompan';\n\n    if ( typeof zoompan.options === 'string' ) {\n      zoompanEffect = `${zoompanEffect}${zoompan.options}`;\n    }\n\n    cldImage.effect(zoompanEffect);\n\n    let loopEffect;\n\n    if ( zoompan.loop === true ) {\n      loopEffect = 'e_loop';\n    } else if ( typeof zoompan.loop === 'string' ) {\n      loopEffect = `e_loop${zoompan.loop}`;\n    }\n\n    if ( loopEffect ) {\n      cldImage.effect(loopEffect);\n    }\n  }\n\n  if ( zoompan !== false ) {\n    overrides.format = 'gif';\n  }\n\n  return {\n    options: overrides\n  }\n}","import { Cloudinary } from '@cloudinary/url-gen';\n\nimport * as croppingPlugin from '../plugins/cropping';\nimport * as effectsPlugin from '../plugins/effects';\nimport * as overlaysPlugin from '../plugins/overlays';\nimport * as rawTransformationsPlugin from '../plugins/raw-transformations';\nimport * as removeBackgroundPlugin from '../plugins/remove-background';\nimport * as underlaysPlugin from '../plugins/underlays';\nimport * as zoompanPlugin from '../plugins/zoompan';\n\nimport {\n  primary as qualifiersPrimary,\n  text as qualifiersText,\n  position as qualifiersPosition\n} from '../constants/qualifiers';\n\nexport const transformationPlugins = [\n  // Background Removal must always come first\n  removeBackgroundPlugin,\n\n  croppingPlugin,\n  effectsPlugin,\n  overlaysPlugin,\n  underlaysPlugin,\n  zoompanPlugin,\n\n  // Raw transformations needs to be last simply to make sure\n  // it's always expected to applied the same way\n\n  rawTransformationsPlugin\n];\n\nlet cld;\n\n/**\n * constructCloudinaryUrl\n */\n\nexport function constructCloudinaryUrl({ options, config }) {\n  if ( !cld ) {\n    cld = new Cloudinary({\n      cloud: {\n        cloudName: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME\n      },\n      url: {\n        // Used to avoid issues with SSR particularly for the blurred placeholder\n        analytics: false\n      },\n      ...config\n    });\n  }\n\n  const publicId = getPublicId(options.src);\n\n  const cldImage = cld.image(publicId);\n\n  transformationPlugins.forEach(({ plugin }) => {\n    const { options: pluginOptions } = plugin({\n      cldImage,\n      options\n    }) || {};\n\n    if ( pluginOptions?.format ) {\n      options.format = pluginOptions.format;\n    }\n  });\n\n  return cldImage\n          .setDeliveryType(options.deliveryType || 'upload')\n          .format(options.format || 'auto')\n          .delivery(`q_${options.quality || 'auto'}`)\n          .toURL();\n}\n\n/**\n * Retrieves the public id of a cloudiary image url. If no url is recognized it returns the parameter it self.\n * If it's recognized that is a url and it's not possible to get the public id, it warns the user.\n *\n * @param {string} src The cloudiary url or public id.\n *\n * @return {string} The images public id\n */\n\nexport function getPublicId(src) {\n  if ( typeof src !== 'string' ) {\n    throw new Error(`Invalid src of type ${typeof src}`);\n  }\n\n  if ( src.includes('res.cloudinary.com') ) {\n    const regexWithTransformations = /(https?)\\:\\/\\/(res.cloudinary.com)\\/([^\\/]+)\\/(image|video|raw)\\/(upload|authenticated)\\/(.*)\\/(v[0-9]+)\\/(.+)(?:\\.[a-z]{3})?/\n    const regexWithoutTransformations = /(https?)\\:\\/\\/(res.cloudinary.com)\\/([^\\/]+)\\/(image|video|raw)\\/(upload|authenticated)\\/(v[0-9]+)\\/(.+)(?:\\.[a-z]{3})?/\n\n    const withTransformations = src.match(regexWithTransformations)\n    const withoutTransformations = src.match(regexWithoutTransformations)\n\n    if ( withTransformations ) {\n      return withTransformations[withTransformations.length - 1]\n    } else if ( withoutTransformations ) {\n      return withoutTransformations[withoutTransformations.length - 1]\n    } else {\n      console.warn(`Not possible to retrieve the publicUrl from ${src}, make sure it's a valid cloudinary image url.`)\n    }\n  }\n\n  return src;\n}\n\n/**\n * createPlaceholderUrl\n */\n\nexport function createPlaceholderUrl({ src, placeholder = true, config }) {\n  const rawTransformations = [];\n\n  if ( placeholder === 'grayscale' ) {\n    rawTransformations.push('e_grayscale');\n  }\n\n  if ( typeof placeholder === 'string' && placeholder.includes('color:') ) {\n    const color = placeholder.split(':').splice(1).join(':')\n    rawTransformations.push('e_grayscale');\n    rawTransformations.push(`e_colorize:60,co_${color}`);\n  }\n\n  return constructCloudinaryUrl({\n    options: {\n      src,\n      width: 100,\n      quality: 1,\n      rawTransformations,\n    },\n    config\n  });;\n}\n","import { constructCloudinaryUrl } from '../lib/cloudinary';\n\nexport function cloudinaryLoader(defaultOptions, cldOptions, cldConfig = {}) {\n  return constructCloudinaryUrl({\n    options: {\n      ...defaultOptions,\n      ...cldOptions\n    },\n    config: cldConfig\n  });\n}","import Image from 'next/image';\n\nimport { createPlaceholderUrl, getPublicId, transformationPlugins } from '../../lib/cloudinary';\nimport { cloudinaryLoader } from '../../loaders/cloudinary-loader';\n\nconst CldImage = props => {\n\n  const CLD_OPTIONS = [];\n\n  transformationPlugins.forEach(({ props = [] }) => {\n    props.forEach(prop => {\n      if ( CLD_OPTIONS.includes(prop) ) {\n        throw new Error(`Option ${prop} already exists!`);\n      }\n      CLD_OPTIONS.push(prop);\n    });\n  })\n\n  // Construct the base Image component props by filtering out Cloudinary-specific props\n\n  const imageProps = {};\n\n  Object.keys(props)\n    .filter(key => !CLD_OPTIONS.includes(key))\n    .forEach(key => imageProps[key] = props[key]);\n\n  // Construct Cloudinary-specific props by looking for values for any of the supported prop keys\n\n  const cldOptions = {};\n\n  CLD_OPTIONS.forEach(key => {\n    if ( props[key] ) {\n      cldOptions[key] = props[key];\n    }\n  });\n\n  // If we see a placeholder option, configure a Cloudinary-based URL.\n  // The resulting image will always be blurred per Next.js, so we're\n  // limited on options for placeholders.\n  //\n  // We need to do this logic here as we potentially need to mutate\n  // an Image component prop as opposed to simply the URL\n  //\n  // https://nextjs.org/docs/api-reference/next/image#blurdataurl\n\n  if ( imageProps.placeholder ) {\n    const publicId = getPublicId(props.src);\n\n    imageProps.blurDataURL = createPlaceholderUrl({\n      src: publicId,\n      placeholder: props.placeholder\n    });\n\n    if ( imageProps.placeholder !== 'blur' ) {\n      imageProps.placeholder = 'blur';\n    }\n  }\n\n  return (\n    <Image\n      {...imageProps}\n      loader={(options) => cloudinaryLoader({ ...imageProps, options }, cldOptions)}\n    />\n  );\n}\n\nexport default CldImage;","import Head from 'next/head';\n\nconst IMAGE_WIDTH = 2400;\nconst IMAGE_HEIGHT = 1200;\n\nimport { constructCloudinaryUrl } from '../../lib/cloudinary';\n\nconst TWITTER_CARD = 'summary_large_image';\n\nconst CldOgImage = ({ excludeTags = [], twitterTitle, ...props }) => {\n  const options = {\n    ...props,\n    width: props.width || IMAGE_WIDTH,\n    height: props.height || IMAGE_HEIGHT,\n    crop: props.crop || 'fill',\n    gravity: props.gravity || 'center'\n  }\n\n  const ogImageUrl = constructCloudinaryUrl({\n    options\n  });\n\n  // We need to include the tags within the Next.js Head component rather than\n  // direcly adding them inside of the Head otherwise we get unexpected results\n\n  return (\n    <Head>\n      <meta property=\"og:image\" content={ogImageUrl} />\n      <meta property=\"og:image:secure_url\" content={ogImageUrl} />\n      <meta property=\"og:image:width\" content={options.width} />\n      <meta property=\"og:image:height\" content={options.height} />\n\n      {options.alt && (\n        <meta property=\"og:image:alt\" content={options.alt} />\n      )}\n\n      {/* Required for summary_large_image, exclude vai excludeTags */}\n      {/* https://developer.twitter.com/en/docs/twitter-for-websites/cards/overview/summary-card-with-large-image */}\n\n      {!excludeTags.includes('twitter:title') && (\n        <meta property=\"twitter:title\" content={twitterTitle || ' '} />\n      )}\n\n      <meta property=\"twitter:card\" content={TWITTER_CARD} />\n      <meta property=\"twitter:image\" content={ogImageUrl} />\n    </Head>\n  );\n}\n\nexport default CldOgImage;","import { useRef } from 'react';\nimport Script from 'next/script';\n\nconst CldUploadWidget = ({\n  children,\n  onUpload,\n  options,\n  signed,\n  signatureEndpoint,\n}) => {\n  const cloudinary = useRef();\n  const widget = useRef();\n\n  /**\n   * generateSignature\n   * @description Makes a request to an endpoint to sign Cloudinary parameters as part of widget creation\n   */\n\n  function generateSignature(callback, paramsToSign) {\n    fetch(signatureEndpoint, {\n      method: \"POST\",\n      body: JSON.stringify({\n        paramsToSign,\n      }),\n    })\n      .then((r) => r.json())\n      .then(({ signature }) => {\n        callback(signature);\n      });\n  }\n\n  /**\n   * createWidget\n   * @description Creates a new instance of the Cloudinary widget and stores in a ref\n   */\n\n  function createWidget() {\n    // When creating a signed upload, you need to provide both your Cloudinary API Key\n    // as well as a signature generator function that will sign any paramters\n    // either on page load or during the upload process. Read more about signed uploads at:\n    // https://cloudinary.com/documentation/upload_widget#signed_uploads\n\n    const totalOptions = {\n      ...options,\n      ...(!!signed && {\n        uploadSignature: generateSignature,\n      }),\n    };\n\n    // no need for apiSecret because of api/sign-cloudinary-params\n    if (signed && !totalOptions.apiKey) {\n      return new Error(\"Signed Upload needs apiKey!\");\n    }\n\n    return cloudinary.current?.createUploadWidget(\n      totalOptions,\n      function (error, result) {\n        // The callback is a bit more chatty than failed or success so\n        // only trigger when one of those are the case. You can additionally\n        // create a separate handler such as onEvent and trigger it on\n        // ever occurance\n        if (error || result.event === \"success\") {\n          onUpload(error, result, widget?.current);\n        }\n      }\n    );\n  }\n\n  /**\n   * open\n   * @description When triggered, uses the current widget instance to open the upload modal\n   */\n\n  function open() {\n    if (!widget?.current) {\n      widget.current = createWidget();\n    }\n\n    widget?.current && widget.current.open();\n  }\n\n  /**\n   * handleOnLoad\n   * @description Stores the Cloudinary window instance to a ref when the widget script loads\n   */\n\n  function handleOnLoad() {\n    cloudinary.current = window.cloudinary;\n  }\n\n  return (\n    <>\n      {children({\n        cloudinary: cloudinary.current,\n        widget: widget.current,\n        open,\n      })}\n      <Script\n        id={`cloudinary-${Math.floor(Math.random() * 100)}`}\n        src=\"https://widget.cloudinary.com/v2.0/global/all.js\"\n        onLoad={handleOnLoad}\n        onError={(e) => {\n          console.error(\"Script failed to load\", e);\n        }}\n      />\n    </>\n  );\n};\n\nexport default CldUploadWidget;\n","import CldUploadWidget from '../CldUploadWidget';\n\nconst CldUploadButton = ({\n  onUpload,\n  options,\n  signed,\n  label,\n  children,\n  ...props\n}) => {\n  return (\n    <>\n      <CldUploadWidget\n        signed={signed}\n        options={options}\n        onUpload={onUpload}\n        signatureEndpoint={signed ?? props.signatureEndpoint}\n      >\n        {({ open }) => {\n          function handleOnClick(e) {\n            e.preventDefault();\n            open();\n          }\n          return (\n            <button onClick={handleOnClick} {...props}>\n              {children}\n            </button>\n          );\n        }}\n      </CldUploadWidget>\n    </>\n  );\n};\n\nexport default CldUploadButton;\n"],"names":["cropsGravityAuto","props","plugin","cldImage","options","width","height","crop","transformationString","gravity","includes","console","warn","resize","params","prop","effect","map","param","forEach","key","primary","aspectRatio","qualifier","position","angle","x","y","text","color","location","fontFamily","fontSize","fontWeight","letterSpacing","textDecoration","DEFAULT_TEXT_OPTIONS","overlays","type","typeQualifier","Array","isArray","applyOverlay","publicId","effects","layerEffects","_excluded","hasPublicId","hasText","hasPosition","layerTransformation","replace","applied","Object","keys","qualifiersPrimary","push","textTransformations","qualifiersText","join","qualifiersPosition","length","addTransformation","rawTransformations","transformation","removeBackground","underlay","underlays","applyUnderlay","underlayOptions","zoompan","overrides","zoompanEffect","loopEffect","loop","format","transformationPlugins","removeBackgroundPlugin","croppingPlugin","effectsPlugin","overlaysPlugin","underlaysPlugin","zoompanPlugin","rawTransformationsPlugin","cld","constructCloudinaryUrl","config","Cloudinary","cloud","cloudName","process","env","NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME","url","analytics","getPublicId","src","image","pluginOptions","setDeliveryType","deliveryType","delivery","quality","toURL","Error","regexWithTransformations","regexWithoutTransformations","withTransformations","match","withoutTransformations","createPlaceholderUrl","placeholder","split","splice","cloudinaryLoader","defaultOptions","cldOptions","cldConfig","CldImage","CLD_OPTIONS","imageProps","filter","blurDataURL","_jsx","Image","IMAGE_WIDTH","IMAGE_HEIGHT","TWITTER_CARD","CldOgImage","excludeTags","twitterTitle","ogImageUrl","_jsxs","Head","alt","CldUploadWidget","children","onUpload","signed","signatureEndpoint","cloudinary","useRef","widget","generateSignature","callback","paramsToSign","fetch","method","body","JSON","stringify","then","r","json","signature","createWidget","totalOptions","uploadSignature","apiKey","current","createUploadWidget","error","result","event","open","handleOnLoad","window","_Fragment","Script","Math","floor","random","e","CldUploadButton","handleOnClick","preventDefault"],"mappings":"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"}