{"version":3,"file":"next-cloudinary.umd.js","sources":["../src/lib/cloudinary.js","../src/plugins/cropping.js","../src/plugins/effects.js","../src/constants/qualifiers.js","../src/plugins/overlays.js","../src/plugins/raw-transformations.js","../src/plugins/remove-background.js","../src/plugins/underlays.js","../src/plugins/zoompan.js","../src/loaders/cloudinary-loader.js","../src/components/CldImage/CldImage.js","../src/components/CldUploadWidget/CldUploadWidget.js","../src/components/CldUploadButton/CldUploadButton.js"],"sourcesContent":["import { Cloudinary } from '@cloudinary/url-gen';\n\nconst cld = new Cloudinary({\n  cloud: {\n    cloudName: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME\n  },\n  url: {\n    // Used to avoid issues with SSR particularly for the blurred placeholder\n    analytics: false\n  }\n});\n\n/**\n * Retrieves the public id of a cloudiary image url. If no url is recognized it returns the parameter it self.\n * If it's recognized that is a url and it's not possible to get the public id, it warns the user.\n *\n * @param {string} src The cloudiary url or public id.\n *\n * @return {string} The images public id\n */\nexport function getPublicId(src) {\n  if ( src.includes('res.cloudinary.com') ) {\n    const regexWithTransformations = /(https?)\\:\\/\\/(res.cloudinary.com)\\/([^\\/]+)\\/(image|video|raw)\\/(upload|authenticated)\\/(.*)\\/(v[0-9]+)\\/(.+)(?:\\.[a-z]{3})?/\n    const regexWithoutTransformations = /(https?)\\:\\/\\/(res.cloudinary.com)\\/([^\\/]+)\\/(image|video|raw)\\/(upload|authenticated)\\/(v[0-9]+)\\/(.+)(?:\\.[a-z]{3})?/\n\n    const withTransformations = src.match(regexWithTransformations)\n    const withoutTransformations = src.match(regexWithoutTransformations)\n\n    if ( withTransformations ) {\n      return withTransformations[withTransformations.length - 1]\n    } else if ( withoutTransformations ) {\n      return withoutTransformations[withoutTransformations.length - 1]\n    } else {\n      console.warn(`Not possible to retrieve the publicUrl from ${src}, make sure it's a valid cloudinary image url.`)\n    }\n  }\n  return src;\n}\n\n/**\n * createPlaceholderUrl\n */\n\nexport function createPlaceholderUrl({ src, placeholder }) {\n  const cldImage = cld.image(src)\n                      .resize('c_limit,w_100')\n                      .delivery('q_1')\n                      .format('auto');\n\n  if ( placeholder === 'grayscale' ) {\n    cldImage.effect('e_grayscale');\n  }\n\n  if ( placeholder.includes('color:') ) {\n    const color = placeholder.split(':').splice(1).join(':')\n    cldImage.effect('e_grayscale');\n    cldImage.effect(`e_colorize:60,co_${color}`);\n  }\n\n  return cldImage.toURL();\n}\n","const cropsGravityAuto = [ 'crop', 'fill', 'lfill', 'fill_pad', 'thumb' ];\n\nexport const props = ['crop', 'gravity'];\n\nexport function plugin({ cldImage, options, cldOptions } = {}) {\n  const { width, height } = options;\n  const { crop = 'limit', gravity } = cldOptions;\n\n  let transformationString = `c_${crop},w_${width}`;\n\n  if ( !gravity && cropsGravityAuto.includes(crop) ) {\n    gravity = 'auto';\n  }\n\n  if ( !['limit'].includes(crop) ) {\n    transformationString = `${transformationString},h_${height}`;\n  }\n\n  if ( gravity ) {\n    if ( gravity === 'auto' && !cropsGravityAuto.includes(crop) ) {\n      console.warn('Auto gravity can only be used with crop, fill, lfill, fill_pad or thumb. Not applying gravity.');\n    } else {\n      transformationString = `${transformationString},g_${gravity}`;\n    }\n  }\n\n  cldImage.resize(transformationString);\n}","const params = [\n  'art',\n  {\n    prop: 'autoBrightness',\n    effect: 'auto_brightness',\n  },\n  {\n    prop: 'autoColor',\n    effect: 'auto_color',\n  },\n  {\n    prop: 'autoContrast',\n    effect: 'auto_contrast',\n  },\n  {\n    prop: 'assistColorblind',\n    effect: 'assist_colorblind',\n  },\n  'blackwhite',\n  'blur',\n  {\n    prop: 'blurFaces',\n    effect: 'blur_faces',\n  },\n  {\n    prop: 'blurRegion',\n    effect: 'blur_region',\n  },\n  'brightness',\n  {\n    prop: 'brightnessHSB',\n    effect: 'brightness_hsb',\n  },\n  'cartoonify',\n  'colorize',\n  'contrast',\n  'distort',\n  {\n    prop: 'fillLight',\n    effect: 'fill_light',\n  },\n  'gamma',\n  {\n    prop: 'gradientFade',\n    effect: 'gradient_fade',\n  },\n  'grayscale',\n  'improve',\n  'negate',\n  {\n    prop: 'oilPaint',\n    effect: 'oil_paint',\n  },\n  'outline',\n  'pixelate',\n  {\n    prop: 'pixelateFaces',\n    effect: 'pixelate_faces',\n  },\n  {\n    prop: 'pixelateRegion',\n    effect: 'pixelate_region',\n  },\n  'redeye',\n  {\n    prop: 'replaceColor',\n    effect: 'replace_color',\n  },\n  'saturation',\n  'sepia',\n  'shadow',\n  'sharpen',\n  'shear',\n  {\n    prop: 'simulateColorblind',\n    effect: 'simulate_colorblind',\n  },\n  'tint',\n  {\n    prop: 'unsharpMask',\n    effect: 'unsharp_mask',\n  },\n  'vectorize',\n  'vibrance',\n  'vignette',\n];\n\nexport const props = params.map(param => param.prop || param);\n\nexport function plugin({ cldImage, cldOptions } = {}) {\n  params.forEach(key => {\n\n    const prop = key.prop || key;\n    const effect = key.effect || key;\n\n    if ( prop === 'oilPaint' && cldOptions[prop]) {\n      console.log('cldOptions[prop]', cldOptions[prop])\n    }\n    if ( cldOptions[prop] === true ) {\n      cldImage.effect(`e_${effect}`);\n    } else if ( typeof cldOptions[prop] === 'string' ) {\n      cldImage.effect(`e_${effect}:${cldOptions[prop]}`);\n    }\n  });\n}","// aspectRatio\n\nexport const primary = {\n  aspectRatio: {\n    qualifier: 'ar'\n  },\n  crop: {\n    qualifier: 'c'\n  },\n  gravity: {\n    qualifier: 'g'\n  },\n  height: {\n    qualifier: 'h'\n  },\n  width: {\n    qualifier: 'w'\n  },\n};\n\nexport const position = {\n  angle: {\n    qualifier: 'a'\n  },\n  gravity: {\n    qualifier: 'g'\n  },\n  x: {\n    qualifier: 'x'\n  },\n  y: {\n    qualifier: 'y'\n  },\n}\n\nexport const text = {\n  color: {\n    qualifier: 'co',\n    location: 'primary'\n  },\n  fontFamily: {\n    qualifier: false\n  },\n  fontSize: {\n    qualifier: false\n  },\n  fontWeight: {\n    qualifier: false\n  },\n  letterSpacing: {\n    qualifier: 'letter_spacing'\n  },\n  textDecoration: {\n    qualifier: false\n  }\n}","import {\n  primary as qualifiersPrimary,\n  text as qualifiersText,\n  position as qualifiersPosition\n} from '../constants/qualifiers';\n\nexport const props = ['overlays'];\n\nexport function plugin({ cldImage, options, cldOptions } = {}) {\n  const { overlays = [] } = cldOptions;\n\n  const type = 'overlay';\n  const typeQualifier = 'l';\n\n  overlays.forEach(({ publicId, position, text, effects: layerEffects = [], ...options }) => {\n    const hasPublicId = typeof publicId === 'string';\n    const hasText = typeof text === 'object';\n    const hasPosition = typeof position === 'object';\n\n    if ( !hasPublicId && !hasText ) {\n      console.warn(`An ${type} is missing Public ID or Text`);\n      return;\n    }\n\n    // Start to construct the transformation string using text or the public ID\n    // if it's image-based\n\n    let layerTransformation;\n\n    if ( hasText ) {\n      layerTransformation = `${typeQualifier}_text`;\n    } else {\n      layerTransformation = `${typeQualifier}_${publicId.replace(/\\//g, ':')}`;\n    }\n\n    // Begin organizing transformations based on what it is and the location\n    // it needs to be placed in the URL\n\n    const primary = [];\n    const applied = [];\n\n    // Gemeral options\n\n    Object.keys(options).forEach(key => {\n      if ( !qualifiersPrimary[key] ) return;\n      const { qualifier } = qualifiersPrimary[key];\n      primary.push(`${qualifier}_${options[key]}`);\n    });\n\n    // Layer effects\n\n    layerEffects.forEach(effect => {\n      Object.keys(effect).forEach(key => {\n        if ( !qualifiersPrimary[key] ) return;\n        const { qualifier } = qualifiersPrimary[key];\n        primary.push(`${qualifier}_${effect[key]}`);\n      });\n    });\n\n    // Text styling\n\n    if ( hasText ) {\n      const textTransformations = [];\n\n      Object.keys(text).forEach(key => {\n        if ( !qualifiersText[key] ) return;\n\n        const { qualifier, location } = qualifiersText[key];\n\n        if ( location === 'primary' ) {\n          primary.push(`${qualifier}_${text[key]}`);\n        } else {\n          textTransformations.push(text[key]);\n        }\n      });\n\n      layerTransformation = `${layerTransformation}:${textTransformations.join('_')}:${text.text}`\n    }\n\n    // Positioning\n\n    if ( hasPosition ) {\n      Object.keys(position).forEach(key => {\n        if ( !qualifiersPosition[key] ) return;\n\n        const { qualifier } = qualifiersPosition[key];\n\n        applied.push(`${qualifier}_${position[key]}`);\n      });\n    }\n\n    // Add all primary transformations\n\n    layerTransformation = `${layerTransformation},${primary.join(',')}`;\n\n    // Add all applied transformations\n\n    layerTransformation = `${layerTransformation}/fl_layer_apply`;\n\n    if ( applied.length > 0 ) {\n      layerTransformation = `${layerTransformation},${applied.join(',')}`;\n    }\n\n    // Finally add it to the image\n\n    cldImage.addTransformation(layerTransformation);\n  });\n}","export const props = ['rawTransformations'];\n\nexport function plugin({ cldImage, cldOptions } = {}) {\n  const { rawTransformations = [] } = cldOptions;\n\n  rawTransformations.forEach(transformation => {\n    cldImage.addTransformation(transformation);\n  });\n}","export const props = ['removeBackground'];\n\nexport function plugin({ cldImage, options, cldOptions } = {}) {\n  const { removeBackground = false } = cldOptions;\n  if ( removeBackground ) {\n    cldImage.effect('e_background_removal');\n  }\n}","import {\n  primary as qualifiersPrimary,\n  text as qualifiersText,\n  position as qualifiersPosition\n} from '../constants/qualifiers';\n\nexport const props = ['underlays'];\n\nexport function plugin({ cldImage, options, cldOptions } = {}) {\n  const { underlays = [] } = cldOptions;\n\n  const type = 'underlay';\n  const typeQualifier = 'u';\n\n  underlays.forEach(({ publicId, type, position, text, effects: layerEffects = [], ...options }) => {\n    const hasPublicId = typeof publicId === 'string';\n    const hasPosition = typeof position === 'object';\n\n    if ( !hasPublicId ) {\n      console.warn(`An ${type} is missing a Public ID`);\n      return;\n    }\n\n    // Start to construct the transformation string using text or the public ID\n    // if it's image-based\n\n    let layerTransformation = `${typeQualifier}_${publicId.replace(/\\//g, ':')}`;\n\n    // Begin organizing transformations based on what it is and the location\n    // it needs to be placed in the URL\n\n    const primary = [];\n    const applied = [];\n\n    // Gemeral options\n\n    Object.keys(options).forEach(key => {\n      if ( !qualifiersPrimary[key] ) return;\n      const { qualifier } = qualifiersPrimary[key];\n      primary.push(`${qualifier}_${options[key]}`);\n    });\n\n    // Layer effects\n\n    layerEffects.forEach(effect => {\n      Object.keys(effect).forEach(key => {\n        if ( !qualifiersPrimary[key] ) return;\n        const { qualifier } = qualifiersPrimary[key];\n        primary.push(`${qualifier}_${effect[key]}`);\n      });\n    });\n\n    // Positioning\n\n    if ( hasPosition ) {\n      Object.keys(position).forEach(key => {\n        if ( !qualifiersPosition[key] ) return;\n\n        const { qualifier } = qualifiersPosition[key];\n\n        applied.push(`${qualifier}_${position[key]}`);\n      });\n    }\n\n    // Add all primary transformations\n\n    layerTransformation = `${layerTransformation},${primary.join(',')}`;\n\n    // Add all applied transformations\n\n    layerTransformation = `${layerTransformation}/fl_layer_apply`;\n\n    if ( applied.length > 0 ) {\n      layerTransformation = `${layerTransformation},${applied.join(',')}`;\n    }\n\n    // Finally add it to the image\n\n    cldImage.addTransformation(layerTransformation);\n  });\n}","export const props = ['zoompan'];\n\nexport function plugin({ cldImage, cldOptions } = {}) {\n  const { zoompan = false } = cldOptions;\n  const options = {};\n\n  if ( zoompan === true ) {\n    cldImage.effect('e_zoompan');\n  } else if ( typeof zoompan === 'string' ) {\n    if ( zoompan === 'loop' ) {\n      cldImage.effect('e_zoompan');\n      cldImage.effect('e_loop');\n    } else {\n      cldImage.effect(`e_zoompan:${zoompan}`);\n    }\n  } else if ( typeof zoompan === 'object' ) {\n    let zoompanEffect = 'e_zoompan';\n\n    if ( typeof zoompan.options === 'string' ) {\n      zoompanEffect = `${zoompanEffect}${zoompan.options}`;\n    }\n\n    cldImage.effect(zoompanEffect);\n\n    let loopEffect;\n\n    if ( zoompan.loop === true ) {\n      loopEffect = 'e_loop';\n    } else if ( typeof zoompan.loop === 'string' ) {\n      loopEffect = `e_loop${zoompan.loop}`;\n    }\n\n    if ( loopEffect ) {\n      cldImage.effect(loopEffect);\n    }\n  }\n\n  if ( zoompan !== false ) {\n    options.format = 'gif';\n  }\n\n  return {\n    options\n  }\n}","import { Cloudinary } from '@cloudinary/url-gen';\nimport { getPublicId } from '../lib/cloudinary';\n\nimport * as croppingPlugin from '../plugins/cropping';\nimport * as effectsPlugin from '../plugins/effects';\nimport * as overlaysPlugin from '../plugins/overlays';\nimport * as rawTransformationsPlugin from '../plugins/raw-transformations';\nimport * as removeBackgroundPlugin from '../plugins/remove-background';\nimport * as underlaysPlugin from '../plugins/underlays';\nimport * as zoompanPlugin from '../plugins/zoompan';\n\nimport {\n  primary as qualifiersPrimary,\n  text as qualifiersText,\n  position as qualifiersPosition\n} from '../constants/qualifiers';\n\nlet cld;\n\nexport const transformationPlugins = [\n  // Background Removal must always come first\n  removeBackgroundPlugin,\n\n  croppingPlugin,\n  effectsPlugin,\n  overlaysPlugin,\n  underlaysPlugin,\n  zoompanPlugin,\n\n  // Raw transformations needs to be last simply to make sure\n  // it's always expected to applied the same way\n\n  rawTransformationsPlugin\n];\n\nexport function cloudinaryLoader(defaultOptions, cldOptions, cldConfig = {}) {\n  if ( !cld ) {\n    cld = new Cloudinary({\n      cloud: {\n        cloudName: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME\n      },\n      url: {\n        // Used to avoid issues with SSR particularly for the blurred placeholder\n        analytics: false\n      },\n      ...cldConfig\n    });\n  }\n\n  const options = {\n    format: 'auto',\n    quality: 'auto',\n    ...defaultOptions\n  };\n  const publicId = getPublicId(options.src);\n\n  const cldImage = cld.image(publicId);\n\n  transformationPlugins.forEach(({ plugin }) => {\n    const { options: pluginOptions } = plugin({\n      cldImage,\n      options,\n      cldOptions\n    }) || {};\n\n    if ( pluginOptions?.format ) {\n      options.format = pluginOptions.format;\n    }\n  });\n\n  return cldImage\n          .format(options.format)\n          .delivery(`q_${options.quality}`)\n          .toURL();\n}","import Image from 'next/image';\n\nimport { createPlaceholderUrl, getPublicId } from '../../lib/cloudinary';\nimport { cloudinaryLoader, transformationPlugins } from '../../loaders/cloudinary-loader';\n\nconst CldImage = props => {\n\n  const CLD_OPTIONS = [];\n\n  transformationPlugins.forEach(({ props = [] }) => {\n    props.forEach(prop => {\n      if ( CLD_OPTIONS.includes(prop) ) {\n        throw new Error(`Option ${prop} already exists!`);\n      }\n      CLD_OPTIONS.push(prop);\n    });\n  })\n\n  // Construct the base Image component props by filtering out Cloudinary-specific props\n\n  const imageProps = {};\n\n  Object.keys(props)\n    .filter(key => !CLD_OPTIONS.includes(key))\n    .forEach(key => imageProps[key] = props[key]);\n\n  // Construct Cloudinary-specific props by looking for values for any of the supported prop keys\n\n  const cldOptions = {};\n\n  CLD_OPTIONS.forEach(key => {\n    if ( props[key] ) {\n      cldOptions[key] = props[key];\n    }\n  });\n\n  // If we see a placeholder option, configure a Cloudinary-based URL.\n  // The resulting image will always be blurred per Next.js, so we're\n  // limited on options for placeholders.\n  //\n  // We need to do this logic here as we potentially need to mutate\n  // an Image component prop as opposed to simply the URL\n  //\n  // https://nextjs.org/docs/api-reference/next/image#blurdataurl\n\n  if ( imageProps.placeholder ) {\n    const publicId = getPublicId(props.src);\n\n    imageProps.blurDataURL = createPlaceholderUrl({\n      src: publicId,\n      placeholder: props.placeholder\n    });\n\n    if ( imageProps.placeholder !== 'blur' ) {\n      imageProps.placeholder = 'blur';\n    }\n  }\n\n  return (\n    <Image\n      {...imageProps}\n      loader={(options) => cloudinaryLoader({ ...imageProps, options }, cldOptions)}\n    />\n  );\n}\n\nexport default CldImage;","import { useRef } from 'react';\nimport Script from 'next/script';\n\nconst CldUploadWidget = ({\n  children,\n  onUpload,\n  options,\n  signed,\n  signatureEndpoint,\n}) => {\n  const cloudinary = useRef();\n  const widget = useRef();\n\n  /**\n   * generateSignature\n   * @description Makes a request to an endpoint to sign Cloudinary parameters as part of widget creation\n   */\n\n  function generateSignature(callback, paramsToSign) {\n    fetch(signatureEndpoint, {\n      method: \"POST\",\n      body: JSON.stringify({\n        paramsToSign,\n      }),\n    })\n      .then((r) => r.json())\n      .then(({ signature }) => {\n        callback(signature);\n      });\n  }\n\n  /**\n   * createWidget\n   * @description Creates a new instance of the Cloudinary widget and stores in a ref\n   */\n\n  function createWidget() {\n    // When creating a signed upload, you need to provide both your Cloudinary API Key\n    // as well as a signature generator function that will sign any paramters\n    // either on page load or during the upload process. Read more about signed uploads at:\n    // https://cloudinary.com/documentation/upload_widget#signed_uploads\n\n    const totalOptions = {\n      ...options,\n      ...(!!signed && {\n        uploadSignature: generateSignature,\n      }),\n    };\n\n    // no need for apiSecret because of api/sign-cloudinary-params\n    if (signed && !totalOptions.apiKey) {\n      return new Error(\"Signed Upload needs apiKey!\");\n    }\n\n    return cloudinary.current?.createUploadWidget(\n      totalOptions,\n      function (error, result) {\n        // The callback is a bit more chatty than failed or success so\n        // only trigger when one of those are the case. You can additionally\n        // create a separate handler such as onEvent and trigger it on\n        // ever occurance\n        if (error || result.event === \"success\") {\n          onUpload(error, result, widget?.current);\n        }\n      }\n    );\n  }\n\n  /**\n   * open\n   * @description When triggered, uses the current widget instance to open the upload modal\n   */\n\n  function open() {\n    if (!widget?.current) {\n      widget.current = createWidget();\n    }\n\n    widget?.current && widget.current.open();\n  }\n\n  /**\n   * handleOnLoad\n   * @description Stores the Cloudinary window instance to a ref when the widget script loads\n   */\n\n  function handleOnLoad() {\n    cloudinary.current = window.cloudinary;\n  }\n\n  return (\n    <>\n      {children({\n        cloudinary: cloudinary.current,\n        widget: widget.current,\n        open,\n      })}\n      <Script\n        id={`cloudinary-${Math.floor(Math.random() * 100)}`}\n        src=\"https://widget.cloudinary.com/v2.0/global/all.js\"\n        onLoad={handleOnLoad}\n        onError={(e) => {\n          console.error(\"Script failed to load\", e);\n        }}\n      />\n    </>\n  );\n};\n\nexport default CldUploadWidget;\n","import CldUploadWidget from '../CldUploadWidget';\n\nconst CldUploadButton = ({\n  onUpload,\n  options,\n  signed,\n  label,\n  children,\n  ...props\n}) => {\n  return (\n    <>\n      <CldUploadWidget\n        signed={signed}\n        options={options}\n        onUpload={onUpload}\n        signatureEndpoint={signed ?? props.signatureEndpoint}\n      >\n        {({ open }) => {\n          function handleOnClick(e) {\n            e.preventDefault();\n            open();\n          }\n          return (\n            <button onClick={handleOnClick} {...props}>\n              {children}\n            </button>\n          );\n        }}\n      </CldUploadWidget>\n    </>\n  );\n};\n\nexport default CldUploadButton;\n"],"names":["cld","Cloudinary","cloud","cloudName","process","env","NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME","url","analytics","getPublicId","src","includes","regexWithTransformations","regexWithoutTransformations","withTransformations","match","withoutTransformations","length","console","warn","createPlaceholderUrl","placeholder","cldImage","image","resize","delivery","format","effect","color","split","splice","join","toURL","cropsGravityAuto","props","plugin","options","cldOptions","width","height","crop","gravity","transformationString","params","prop","map","param","forEach","key","log","primary","aspectRatio","qualifier","position","angle","x","y","text","location","fontFamily","fontSize","fontWeight","letterSpacing","textDecoration","overlays","type","typeQualifier","publicId","effects","layerEffects","_excluded","hasPublicId","hasText","hasPosition","layerTransformation","replace","applied","Object","keys","qualifiersPrimary","push","textTransformations","qualifiersText","qualifiersPosition","addTransformation","rawTransformations","transformation","removeBackground","underlays","zoompan","zoompanEffect","loopEffect","loop","transformationPlugins","removeBackgroundPlugin","croppingPlugin","effectsPlugin","overlaysPlugin","underlaysPlugin","zoompanPlugin","rawTransformationsPlugin","cloudinaryLoader","defaultOptions","cldConfig","quality","pluginOptions","CldImage","CLD_OPTIONS","Error","imageProps","filter","blurDataURL","_jsx","Image","CldUploadWidget","children","onUpload","signed","signatureEndpoint","cloudinary","useRef","widget","generateSignature","callback","paramsToSign","fetch","method","body","JSON","stringify","then","r","json","signature","createWidget","totalOptions","uploadSignature","apiKey","current","createUploadWidget","error","result","event","open","handleOnLoad","window","_jsxs","_Fragment","Script","Math","floor","random","e","CldUploadButton","handleOnClick","preventDefault"],"mappings":"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"}